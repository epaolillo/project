.flow-diagram {
  width: 100%;
  height: 100%;
  position: relative;
  background: #fafbfc;
}

.react-flow-container {
  width: 100%;
  height: 100%;
}

/* Loading state */
.flow-diagram.loading {
  display: flex;
  align-items: center;
  justify-content: center;
  background: #fafbfc;
}

.loading-spinner {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 16px;
}

.spinner {
  width: 40px;
  height: 40px;
  border: 4px solid #e9ecef;
  border-top: 4px solid #007bff;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.loading-spinner p {
  color: #5a6c7d;
  font-size: 14px;
  margin: 0;
}

/* Error state */
.flow-diagram.error {
  display: flex;
  align-items: center;
  justify-content: center;
  background: #fafbfc;
}

.error-message {
  text-align: center;
  padding: 32px;
  background: white;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.error-message h3 {
  color: #dc3545;
  margin: 0 0 8px 0;
  font-size: 18px;
}

.error-message p {
  color: #5a6c7d;
  margin: 0 0 16px 0;
}

.retry-button {
  background: #007bff;
  color: white;
  border: none;
  padding: 8px 16px;
  border-radius: 4px;
  cursor: pointer;
  font-size: 14px;
  transition: background-color 0.3s ease;
}

.retry-button:hover {
  background: #0056b3;
}

/* Custom React Flow styles */
.react-flow__node.selected-node .task-node {
  border-color: #007bff;
  box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3);
}

.react-flow__node.completed-node .task-node {
  border-color: #28a745;
}

.react-flow__node.incident-node .task-node {
  border-color: #dc3545;
  animation: incidentPulse 2s ease-in-out infinite;
}

@keyframes incidentPulse {
  0% {
    box-shadow: 0 0 0 0 rgba(220, 53, 69, 0.4);
  }
  70% {
    box-shadow: 0 0 0 4px rgba(220, 53, 69, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(220, 53, 69, 0);
  }
}

/* React Flow control styles */
.react-flow__controls {
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.react-flow__controls-button {
  background: transparent;
  border: none;
  border-bottom: 1px solid #e9ecef;
}

.react-flow__controls-button:hover {
  background: #f8f9fa;
}

.react-flow__controls-button:last-child {
  border-bottom: none;
}

/* MiniMap styles */
.react-flow__minimap {
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

/* Edge styles with ultra thick lines and animations */
.react-flow__edge-path {
  stroke: #4a90e2;
  stroke-width: 20;
  stroke-linecap: round;
  stroke-dasharray: 60, 40;
  filter: drop-shadow(0 4px 8px rgba(74, 144, 226, 0.4));
  animation: edgeFlow 2s linear infinite;
}

.react-flow__edge.selected .react-flow__edge-path {
  stroke: #007bff;
  stroke-width: 24;
  filter: drop-shadow(0 4px 12px rgba(0, 123, 255, 0.5));
}

/* Animated flow edges */
.react-flow__edge.animated .react-flow__edge-path {
  stroke-dasharray: 60, 40;
  animation: edgeFlow 2s linear infinite;
}

.react-flow__edge.flow-active .react-flow__edge-path {
  stroke: #28a745;
  stroke-width: 24;
  stroke-dasharray: 75, 50;
  animation: edgeFlowActive 1.5s linear infinite;
  filter: drop-shadow(0 4px 12px rgba(40, 167, 69, 0.5));
}

.react-flow__edge.flow-pending .react-flow__edge-path {
  stroke: #ffc107;
  stroke-width: 20;
  stroke-dasharray: 50, 30;
  animation: edgeFlowPending 2.5s linear infinite;
  filter: drop-shadow(0 4px 10px rgba(255, 193, 7, 0.4));
}

.react-flow__edge.flow-completed .react-flow__edge-path {
  stroke: #28a745;
  stroke-width: 18;
  stroke-dasharray: 40, 20;
  animation: edgeFlowCompleted 1s linear infinite;
  filter: drop-shadow(0 3px 8px rgba(40, 167, 69, 0.4));
}

/* Edge flow animations with thick lines - corrected direction */
@keyframes edgeFlow {
  0% {
    stroke-dashoffset: 100;
  }
  100% {
    stroke-dashoffset: 0;
  }
}

@keyframes edgeFlowActive {
  0% {
    stroke-dashoffset: 125;
  }
  100% {
    stroke-dashoffset: 0;
  }
}

@keyframes edgeFlowPending {
  0% {
    stroke-dashoffset: 80;
  }
  100% {
    stroke-dashoffset: 0;
  }
}

@keyframes edgeFlowCompleted {
  0% {
    stroke-dashoffset: 60;
    opacity: 0.8;
  }
  50% {
    opacity: 1;
  }
  100% {
    stroke-dashoffset: 0;
    opacity: 0.8;
  }
}

/* Enhanced connection line - ultra thick */
.react-flow__connection-line {
  stroke: #4a90e2;
  stroke-width: 20;
  stroke-linecap: round;
  stroke-dasharray: 60, 40;
  animation: connectionPulse 1s ease-in-out infinite alternate;
  filter: drop-shadow(0 4px 8px rgba(74, 144, 226, 0.4));
}

@keyframes connectionPulse {
  0% {
    stroke-width: 20;
    opacity: 0.7;
  }
  100% {
    stroke-width: 24;
    opacity: 1;
  }
}

/* Responsive adjustments */
@media (max-width: 768px) {
  /* Adjust edge thickness for mobile */
  .react-flow__edge-path {
    stroke-width: 12;
  }

  .react-flow__edge.selected .react-flow__edge-path {
    stroke-width: 14;
  }

  .react-flow__edge.flow-active .react-flow__edge-path {
    stroke-width: 14;
  }

  .react-flow__edge.flow-pending .react-flow__edge-path {
    stroke-width: 12;
  }

  .react-flow__edge.flow-completed .react-flow__edge-path {
    stroke-width: 10;
  }

  .react-flow__connection-line {
    stroke-width: 10;
  }

  /* Adjust dash arrays for mobile */
  .react-flow__edge.animated .react-flow__edge-path {
    stroke-dasharray: 36, 24;
  }

  .react-flow__edge.flow-active .react-flow__edge-path {
    stroke-dasharray: 45, 30;
  }

  .react-flow__edge.flow-pending .react-flow__edge-path {
    stroke-dasharray: 30, 18;
  }

  .react-flow__edge.flow-completed .react-flow__edge-path {
    stroke-dasharray: 24, 12;
  }
}
